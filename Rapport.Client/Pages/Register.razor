@page "/register"
@using Rapport.Shared.Dto_er.User
@inject IAuthService AuthService

<PageTitle>Register</PageTitle>

<h3>Register</h3>

<EditForm Model="user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control" />
        <ValidationMessage For="@(() => user.Email)" />
    </div>
    <div class="mb-3">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password" />
        <ValidationMessage For="@(() => user.Password)" />
    </div>
    <div class="mb-3">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" @bind-Value="user.ConformPassword" class="form-control" type="password" />
        <ValidationMessage For="@(() => user.ConformPassword)" />
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
    <div class="@messageCssClass">
        <span>@message</span>
    </div>
    <div class="md-3">
        <label for="roles">Rolle</label>
    </div>
</EditForm>

@code {


    [Inject]
    private NavigationManager NavigationManager { get; set; }
    RegisterDto user = new RegisterDto();

    string message = string.Empty;
    string messageCssClass = string.Empty;

    async Task HandleRegistration()
    {
        try
        {
   
        var result = await AuthService.RegisterUser(user);
     
        NavigationManager.NavigateTo("login");
        }
        catch(Exception ex)
        {
            throw new Exception($"Fejl på registering", ex);
     
        }
    }


}
