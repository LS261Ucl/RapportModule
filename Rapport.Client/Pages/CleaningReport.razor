@inherits ReportBase
@page "/report/cleaning/{id:int}"


<h3 class="justify-content-center">@reportDto.Title</h3>
<Pdf></Pdf>

<EditForm Model="reportDto" OnValidSubmit="OnInitializedAsync">
    <DataAnnotationsValidator/>
    <MudCard>
        <MudCardContent>
            <InputTextArea @bind-Value="reportDto.Remarks" placeholder="Bemærkninger"></InputTextArea>
            @if(reportDto.ReportGroups != null)
            {
                @foreach(var groups in reportDto.ReportGroups)
                {
                      <MudTextField Label="Titel" @bind-Value="groups.Titel" For="@(() => groups.Titel )"></MudTextField>
                      @if(groups.Elements != null)
                    {
                        @foreach(var element in groups.Elements)
                        {
                             <MudTextField Label="Titel" @bind-Value="element.Titel" For="@(() => element.Titel )" Disabled=reportDto.IsReadOnly></MudTextField>
                             <MudTextField Label="Bemærkninger" @bind-Value="element.Remarks" For="(() => element.Remarks)" Disabled=reportDto.IsReadOnly></MudTextField>
                             <InputCheckbox Label="Godkendt" @bind-Text=@element.Options For="(()=> element.Options)" Disabled=reportDto.IsReadOnly></InputCheckbox>
                             <InputCheckbox Label="Godkendt" @bind-Text=@element.Options For="(()=> element.Options)" Disabled=reportDto.IsReadOnly></InputCheckbox>
                        }
                    }
                }
            }
                  <div class="mb-0">
            <label for="imageUrl">Image Url</label>
            <InputText id="imageUrl" @bind-Value="reportDto.ImageUrl" class="form-control"></InputText>
        </div>        <div class="mb-0" style="display: flex; flex-wrap: wrap; flex-direction: row; justify-content: center;">
            @if (!string.IsNullOrEmpty(reportDto.ImageUrl))
            {
                <img src="@reportDto.ImageUrl" />
            }
            else
            {
                foreach (var image in reportDto.Images)
                {
                    <MudCard Class="ma-2">
                        <MudCardContent>
                            <MudImage Src="@image.Img" />
                        </MudCardContent>
                        <MudCardActions Style="justify-content: center;">
                            <MudButton Variant="Variant.Filled"
                           Color="Color.Error"
                           OnClick="@(() => RemoveImage(image.Id))">
                                Remove
                            </MudButton>
                        </MudCardActions>
                    </MudCard>
                }
            }
        </div>
      
<div class="align-content-center"> 
    <br />
      <MudButton 
                @onclick="(() => Save(reportDto.Id))"
                Variant="Variant.Filled" 
                EndIcon="@Icons.Material.Filled.Save" 
                Color="Color.Primary">Gem</MudButton>
</div>

<br /><br />
     <MudButton 
                @onclick="(() => SendMail())"
                Variant="Variant.Filled" 
                EndIcon="@Icons.Material.Filled.Send" 
                Color="Color.Primary">Send</MudButton>
                <br />
                
@*<Pdf></Pdf>*@
        </MudCardContent>
        </MudCard>
    <ValidationSummary/>
</EditForm>



