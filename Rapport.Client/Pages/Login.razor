@page "/login"
@using Microsoft.AspNetCore.WebUtilities
@using Rapport.Shared.Dto_er.User
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider


<PageTitle>Login</PageTitle>

<h3>Login</h3>

<EditForm Model="user" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    
    <div class="col-md-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control" />
        <ValidationMessage For="@(() => user.Email)" />
    </div>
    <div class="col-md-3">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password" />
        <ValidationMessage For="@(() => user.Password)" />
    </div>
    <div class="col-md-3">
            <button type="submit" class="btn btn-outline-primary">Login</button>

    </div>
    <div class="col-md-3">
        <button type="button" class="btn btn-outline-secondary" @onclick="@(() => RegisterUser())">Opret bruger</button>
</div>
    
</EditForm>
<div class="text-danger">
    <span>@errorMessage</span>
</div>

@code {
    private UserLoginDto user = new UserLoginDto();

    private string errorMessage = string.Empty;

    private string returnUrl = string.Empty;

    protected override void OnInitialized()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("returnUrl", out var url))
        {
            returnUrl = url;
        }
    }

    private async Task HandleLogin()
    {
        var result = await AuthService.Login(user);
        NavigationManager.NavigateTo("/templates");

    }

    private async Task RegisterUser()
    {
        NavigationManager.NavigateTo("register");
    }
}